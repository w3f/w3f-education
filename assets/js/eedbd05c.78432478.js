"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[6502],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>m});var n=t(67294);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),h=i,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||r;return t?n.createElement(m,o(o({ref:a},c),{},{components:t})):n.createElement(m,o({ref:a},c))}));function m(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=h;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},98701:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=t(87462),i=(t(67294),t(3905));const r={id:"install-binary",title:"Install Local Binaries",sidebar_label:"Install Local Binaries",description:"Install the necessary Polkadot binaries onto your local machine."},o=void 0,l={unversionedId:"Parachain/beginner/section2/install-binary",id:"Parachain/beginner/section2/install-binary",title:"Install Local Binaries",description:"Install the necessary Polkadot binaries onto your local machine.",source:"@site/docs/Parachain/beginner/section2/install-binary.md",sourceDirName:"Parachain/beginner/section2",slug:"/Parachain/beginner/section2/install-binary",permalink:"/docs/Parachain/beginner/section2/install-binary",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Parachain/beginner/section2/install-binary.md",tags:[],version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1694627089,formattedLastUpdatedAt:"Sep 13, 2023",frontMatter:{id:"install-binary",title:"Install Local Binaries",sidebar_label:"Install Local Binaries",description:"Install the necessary Polkadot binaries onto your local machine."},sidebar:"parachain",previous:{title:"Dependency Installation & Preparation",permalink:"/docs/Parachain/beginner/section2/"},next:{title:"Install the Cumulus Parachain Template",permalink:"/docs/Parachain/beginner/section2/install-template"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing <code>polkadot</code>",id:"installing-polkadot",level:2},{value:"Option 1: Manual Compilation (Recommended)",id:"option-1-manual-compilation-recommended",level:3},{value:"Option 2: Install via a package manager (Linux)",id:"option-2-install-via-a-package-manager-linux",level:3},{value:"Chain Specification",id:"chain-specification",level:2},{value:"Optional: Generating a Custom Chain Specification",id:"optional-generating-a-custom-chain-specification",level:3}],c={toc:p},d="wrapper";function u(e){let{components:a,...t}=e;return(0,i.kt)(d,(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This page will focus on installing the dependencies you need to run a local relay chain. You will:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Install ",(0,i.kt)("inlineCode",{parentName:"li"},"polkadot")),(0,i.kt)("li",{parentName:"ul"},"Configure a valid chain specification for your relay chain")),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Before starting, you should have the following already on your system:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Rust Toolchain")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"git"))),(0,i.kt)("p",null,"For more information, view the ",(0,i.kt)("strong",{parentName:"p"},"General Prerequisites")," page."),(0,i.kt)("p",null,"For the best experience in following this guide, consider also cloning this repository:\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/CrackTheCode016/parachain-guide-resources"},(0,i.kt)("inlineCode",{parentName:"a"},"parachain-guide-resources"))),(0,i.kt)("h2",{id:"installing-polkadot"},"Installing ",(0,i.kt)("inlineCode",{parentName:"h2"},"polkadot")),(0,i.kt)("p",null,"For this guide, we will ensure a consistent environment by installing Polkadot. This is how we will\nprovision and start our relay chain instance:"),(0,i.kt)("h3",{id:"option-1-manual-compilation-recommended"},"Option 1: Manual Compilation (Recommended)"),(0,i.kt)("p",null,"If you are on macOS, below is the current best way to install ",(0,i.kt)("inlineCode",{parentName:"p"},"polkadot"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Clone the latest, stable branch of Polkadot (1.0.0 at the time of this writing):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --branch release-v1.0.0 https://github.com/paritytech/polkadot.git\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"cargo")," to build the binary"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --release\n")),(0,i.kt)("admonition",{parentName:"li",title:"\u231b This will take some time",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Depending on your machine, this may take 45-60 minutes."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Once compiled, ensure it runs:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./target/release/polkadot --help\n")))),(0,i.kt)("admonition",{title:"Create a symlink to easily run your Polkadot binary.",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"For ease of use, consider adding the target executable to your local path or creating a symlink.\nThere are three binaries that need to be linked if you choose to do this:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"polkadot")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"polkadot-execute-worker")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"polkadot-prepare-worker"))),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Replace <path> with the path to your cloned polkadot repo\n# The last line may need to be replaced!\n\n# Polkadot\nln -s <path-to-polkadot>/target/release/polkadot /usr/local/bin/polkadot\n\n# Polkadot Prepare Worker\nln -s <path-to-polkadot>/target/release/polkadot-prepare-worker /usr/local/bin/polkadot-prepare-worker\n\n# Polkadot Execute Worker\nln -s <path-to-polkadot>/target/release/polkadot-execute-worker /usr/local/bin/polkadot-execute-worker\n\n# Use directly in path!\n\npolkadot --help\n"))),(0,i.kt)("h3",{id:"option-2-install-via-a-package-manager-linux"},"Option 2: Install via a package manager (Linux)"),(0,i.kt)("p",null,"One may use ",(0,i.kt)("inlineCode",{parentName:"p"},"apt"),", so long as they add the necessary repositories:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Import the security@parity.io GPG key\ngpg --recv-keys --keyserver hkps://keys.mailvelope.com 9D4B2B6EB8F97156D19669A9FF0812D491B96798\ngpg --export 9D4B2B6EB8F97156D19669A9FF0812D491B96798 > /usr/share/keyrings/parity.gpg\n# Add the Parity repository and update the package index\necho 'deb [signed-by=/usr/share/keyrings/parity.gpg] https://releases.parity.io/deb release main' > /etc/apt/sources.list.d/parity.list\napt update\n# Install the `parity-keyring` package - This will ensure the GPG key\n# used by APT remains up-to-date\napt install parity-keyring\n# Install polkadot\napt install polkadot\n")),(0,i.kt)("h2",{id:"chain-specification"},"Chain Specification"),(0,i.kt)("p",null,"Once Polkadot is compiled, we must ensure we have a valid ",(0,i.kt)("inlineCode",{parentName:"p"},"chain_spec")," file to launch our local\nrelay chain."),(0,i.kt)("p",null,"For the purposes of this guide, you can use the one located here with your cloned repository at\n",(0,i.kt)("inlineCode",{parentName:"p"},"relaychain/relaychain_chain_spec.json")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"relaychain/relaychain_chain_spec_raw.json")," and. Keep\nthis at hand, as this will be used to run your relay chain."),(0,i.kt)("h3",{id:"optional-generating-a-custom-chain-specification"},"Optional: Generating a Custom Chain Specification"),(0,i.kt)("p",null,"It is possible to also generate your own, custom chain specification. This is usually done after\nchanging the ",(0,i.kt)("inlineCode",{parentName:"p"},"polkadot")," source code, as the ",(0,i.kt)("inlineCode",{parentName:"p"},"code")," field within the chain spec would need to be\nupdated. Once you modify the chain spec, you can run the following command to generate it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Run from locally compiled repository\n./polkadot/target/release/polkadot build-spec > ./relaychain/relaychain_spec.json\n# or, with symlink\npolkadot build-spec > ./relaychain/relaychain_spec.json\n")),(0,i.kt)("p",null,"Once this is built, also build the ",(0,i.kt)("strong",{parentName:"p"},"raw"),", SCALE-encoded file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Run from locally compiled repository\n./polkadot/target/release/polkadot build-spec \\\n    --chain ./relaychain/relaychain_spec.json \\\n    --raw > ./relaychain/relaychain_spec_raw.json\n\n# or, with symlink\npolkadot build-spec \\\n    --chain ./relaychain/relaychain_spec.json \\\n    --raw > ./relaychain/relaychain_spec_raw.json\n")))}u.isMDXComponent=!0}}]);