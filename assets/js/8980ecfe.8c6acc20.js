"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[7756],{3905:(e,a,n)=>{n.d(a,{Zo:()=>p,kt:()=>b});var t=n(67294);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=t.createContext({}),c=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(n),u=i,b=h["".concat(s,".").concat(u)]||h[u]||d[u]||r;return n?t.createElement(b,o(o({ref:a},p),{},{components:n})):t.createElement(b,o({ref:a},p))}));function b(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l[h]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},11747:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var t=n(87462),i=(n(67294),n(3905));const r={id:"running-chains",title:"Running the Relay and Parachain",sidebar_label:"Running the Relay and Parachain",description:"Ensure both the relay chain and parachain run locally."},o=void 0,l={unversionedId:"Parachain/beginner/section2/running-chains",id:"Parachain/beginner/section2/running-chains",title:"Running the Relay and Parachain",description:"Ensure both the relay chain and parachain run locally.",source:"@site/docs/Parachain/beginner/section2/running-chains.md",sourceDirName:"Parachain/beginner/section2",slug:"/Parachain/beginner/section2/running-chains",permalink:"/docs/Parachain/beginner/section2/running-chains",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Parachain/beginner/section2/running-chains.md",tags:[],version:"current",lastUpdatedBy:"filippoweb3",lastUpdatedAt:1700220256,formattedLastUpdatedAt:"Nov 17, 2023",frontMatter:{id:"running-chains",title:"Running the Relay and Parachain",sidebar_label:"Running the Relay and Parachain",description:"Ensure both the relay chain and parachain run locally."},sidebar:"parachain",previous:{title:"Install the Cumulus Parachain Template",permalink:"/docs/Parachain/beginner/section2/install-template"},next:{title:"Creating & Registering Parachain",permalink:"/docs/Parachain/beginner/section3/"}},s={},c=[{value:"Launching the Relay Chain",id:"launching-the-relay-chain",level:2},{value:"Launching the Parachain",id:"launching-the-parachain",level:2},{value:"Observing State &amp; Verifying Orchestration",id:"observing-state--verifying-orchestration",level:2}],p={toc:c},h="wrapper";function d(e){let{components:a,...n}=e;return(0,i.kt)(h,(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this final page, we will do the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Run ",(0,i.kt)("strong",{parentName:"li"},"two")," validators for our relay chain testnet."),(0,i.kt)("li",{parentName:"ul"},"Run ",(0,i.kt)("strong",{parentName:"li"},"one")," parachain collator to supply block data to our relay chain."),(0,i.kt)("li",{parentName:"ul"},"Observe the state changing on both chains, and what they mean.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"All commands are in the context of the ",(0,i.kt)("inlineCode",{parentName:"p"},"parachain-guide-resources")," repository")),(0,i.kt)("h2",{id:"launching-the-relay-chain"},"Launching the Relay Chain"),(0,i.kt)("p",null,"Our relay chain needs two validators to build blocks. We can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"alice")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"bob")," development\npresets to launch our testnet validation nodes using the ",(0,i.kt)("inlineCode",{parentName:"p"},"polkadot")," binary:"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"Use the ",(0,i.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"symlink"),"!"),(0,i.kt)("p",{parentName:"admonition"},"If you followed the steps to add a ",(0,i.kt)("inlineCode",{parentName:"p"},"symlink"),", you may replace the preceded:\n",(0,i.kt)("inlineCode",{parentName:"p"},"./target/release/polkadot")," with just: ",(0,i.kt)("inlineCode",{parentName:"p"},"polkadot"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Launch Alice:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./target/debug/polkadot \\\n    --alice \\\n    --validator \\\n    --base-path /tmp/relay/alice \\\n    --chain ./relaychain/relaychain_spec_raw.json \\\n    --disable-worker-version-check\n"))),(0,i.kt)("li",{parentName:"ul"},"Launch Bob:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./target/debug/polkadot \\\n    --bob \\\n    --validator \\\n    --base-path /tmp/relay/bob \\\n    --chain ./relaychain/relaychain_spec_raw.json \\\n    --port 30334 \\\n    --rpc-port 9945 \\\n    --disable-worker-version-check\n")))),(0,i.kt)("p",null,"Once they are both running, you should see output similar to the following (for ",(0,i.kt)("inlineCode",{parentName:"p"},"bob"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'2023-08-11 09:49:07 Parity Polkadot\n2023-08-11 09:49:07 \u270c\ufe0f  version 0.9.43-407e158a5dc\n2023-08-11 09:49:07 \u2764\ufe0f  by Parity Technologies <admin@parity.io>, 2017-2023\n2023-08-11 09:49:07 \ud83d\udccb Chain specification: Rococo Local Testnet\n2023-08-11 09:49:07 \ud83c\udff7  Node name: Bob\n2023-08-11 09:49:07 \ud83d\udc64 Role: AUTHORITY\n2023-08-11 09:49:07 \ud83d\udcbe Database: RocksDb at /tmp/relay/bob/chains/rococo_local_testnet/db/full\n2023-08-11 09:49:10 \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.\n2023-08-11 09:49:10 \ud83c\udff7  Local node identity is: 12D3KooWHk4Kx5zRpNiWoXb44Vaye1kGbgwENUwHp1AVk9ze9ko8\n2023-08-11 09:49:10 \ud83d\ude80 Using prepare-worker binary at: "/Users/bader/Documents/polkadot/polkadot/target/release/polkadot-prepare-worker"\n2023-08-11 09:49:10 \ud83d\ude80 Using execute-worker binary at: "/Users/bader/Documents/polkadot/polkadot/target/release/polkadot-execute-worker"\n2023-08-11 09:49:10 \ud83d\udcbb Operating system: macos\n2023-08-11 09:49:10 \ud83d\udcbb CPU architecture: aarch64\n2023-08-11 09:49:10 \ud83d\udce6 Highest known block at #0\n2023-08-11 09:49:10 \u303d\ufe0f Prometheus exporter started at 127.0.0.1:9615\n2023-08-11 09:49:10 Running JSON-RPC server: addr=127.0.0.1:9944, allowed origins=["http://localhost:*", "http://127.0.0.1:*", "https://localhost:*", "https://127.0.0.1:*", "https://polkadot.js.org"]\n2023-08-11 09:49:10 \ud83c\udfc1 CPU score: 1000.29 MiBs\n2023-08-11 09:49:10 \ud83c\udfc1 Memory score: 27.17 GiBs\n2023-08-11 09:49:10 \ud83c\udfc1 Disk score (seq. writes): 1.27 GiBs\n2023-08-11 09:49:10 \ud83c\udfc1 Disk score (rand. writes): 344.09 MiBs\n2023-08-11 09:49:10 \u26a0\ufe0f  The hardware does not meet the minimal requirements for role \'Authority\' find out more at:\nhttps://wiki.polkadot.network/docs/maintain-guides-how-to-validate-polkadot#reference-hardware\n2023-08-11 09:49:10 Cannot enable landlock, a Linux kernel security feature. Running validation of malicious PVF code has a higher risk of compromising this machine. Consider running on Linux with landlock support for maximum security.\n2023-08-11 09:49:10 Starting with an empty approval vote DB.\n2023-08-11 09:49:10 \ud83d\udc76 Starting BABE Authorship worker\n2023-08-11 09:49:10 \ud83e\udd69 BEEFY gadget waiting for BEEFY pallet to become available...\n2023-08-11 09:49:15 \ud83d\udca4 Idle (0 peers), best: #0 (0x7389\u20264422), finalized #0 (0x7389\u20264422), \u2b07 0 \u2b06 0\n')),(0,i.kt)("admonition",{title:"Nodes not syncing?",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"If Bob and Alice are not syncing, you may run ",(0,i.kt)("inlineCode",{parentName:"p"},"bob")," with this command:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"--bootnodes /ip4/127.0.0.1/tcp/30333/p2p/<local-node-identity-here>\n"))),(0,i.kt)("p",null,"If both nodes are syncing, you should be seeing the block count increase and new consensus sessions\nbeing started:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"2023-08-11 10:58:18 \ud83d\ude4c Starting consensus session on top of parent 0x7389b78dbb3a94bf09aa53802c338131e242b78678f5959f170e4902ccf24422\n2023-08-11 10:58:20 ParentBlockRandomness did not provide entropy\n2023-08-11 10:58:20 ParentBlockRandomness did not provide entropy\n2023-08-11 10:58:20 \ud83c\udf81 Prepared block for proposing at 1 (3 ms) [hash: 0xcc797177284f6f7c6e1bc544b0f73624007909c0f94cb6079d1d4dd18fbb6056; parent_hash: 0x7389\u20264422; extrinsics (2): [0xdf06\u20263c14, 0x2cde\u2026129c]\n2023-08-11 10:58:20 \ud83d\udd16 Pre-sealed block for proposal at 1. Hash now 0x8934f6a5aa897e16fa3ba97e4be1ebb67372d6729737871b235b4208bf08dc5b, previously 0xcc797177284f6f7c6e1bc544b0f73624007909c0f94cb6079d1d4dd18fbb6056.\n2023-08-11 10:58:20 \ud83d\udc76 New epoch 0 launching at block 0x8934\u2026dc5b (block slot 281960983 >= start slot 281960983).\n2023-08-11 10:58:20 \ud83d\udc76 Next epoch starts at slot 281960993\n2023-08-11 10:58:20 \u2728 Imported #1 (0x8934\u2026dc5b)\n")),(0,i.kt)("p",null,"Congratulations, your relay chain is up and running!"),(0,i.kt)("h2",{id:"launching-the-parachain"},"Launching the Parachain"),(0,i.kt)("p",null,"With the relay chain actively producing blocks, we now need to launch a ",(0,i.kt)("strong",{parentName:"p"},"collator")," for our\nparachain:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Launch a collator"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./substrate-parachain-template/target/release/parachain-template-node \\\n  --alice \\\n  --collator \\\n  --force-authoring \\\n  --chain ./parachain/parachain_chain_spec_raw.json \\\n  --base-path /tmp/parachain/alice \\\n  --port 40333 \\\n  --rpc-port 8844 \\\n")))),(0,i.kt)("p",null,"With the output looking like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"2023-08-11 10:52:44 Parachain Collator Template\n2023-08-11 10:52:44 \u270c\ufe0f  version 0.1.0-38c8589a9f8\n2023-08-11 10:52:44 \u2764\ufe0f  by Anonymous, 2020-2023\n2023-08-11 10:52:44 \ud83d\udccb Chain specification: Local Testnet\n2023-08-11 10:52:44 \ud83c\udff7  Node name: Alice\n2023-08-11 10:52:44 \ud83d\udc64 Role: AUTHORITY\n2023-08-11 10:52:44 \ud83d\udcbe Database: RocksDb at /tmp/parachain/alice/chains/local_testnet/db/full\n2023-08-11 10:52:45 Parachain Account: 5Ec4AhPZk8STuex8Wsi9TwDtJQxKqzPJRCH7348Xtcs9vZLJ\n2023-08-11 10:52:45 Is collating: yes\n2023-08-11 10:52:46 [Parachain] \ud83d\udd28 Initializing Genesis block/state (state: 0xde8e\u202666b5, header-hash: 0x2717\u202655b5)\n2023-08-11 10:52:47 [Relaychain] \ud83d\udd28 Initializing Genesis block/state (state: 0x98e3\u2026789f, header-hash: 0x7389\u20264422)\n2023-08-11 10:52:47 [Relaychain] \ud83d\udc74 Loading GRANDPA authority set from genesis on what appears to be first startup.\n2023-08-11 10:52:48 [Relaychain] \ud83d\udc76 Creating empty BABE epoch changes on what appears to be first startup.\n2023-08-11 10:52:48 [Relaychain] \ud83c\udff7  Local node identity is: 12D3KooWKdqvh5Lzt1p8Rm54QNC1UwWtBabyBPUYtkdAt1SKkYpG\n")),(0,i.kt)("p",null,"Your parachain should be syncing with the relay chain, and will look similar to the below. Notice\nthe blocks being imported and matching the height of the relay chain:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"2023-08-11 11:22:04 [Relaychain] \ud83d\udca4 Idle (2 peers), best: #237 (0x3069\u2026400d), finalized #235 (0xa85b\u2026c64c), \u2b07 48.2kiB/s \u2b06 1.9kiB/s\n2023-08-11 11:22:05 [Parachain] \ud83d\udca4 Idle (0 peers), best: #0 (0x2717\u202655b5), finalized #0 (0x2717\u202655b5), \u2b07 0 \u2b06 0\n2023-08-11 11:22:06 [Relaychain] \u2728 Imported #238 (0x5a36\u2026447c)\n2023-08-11 11:22:09 [Relaychain] \ud83d\udca4 Idle (2 peers), best: #238 (0x5a36\u2026447c), finalized #235 (0xa85b\u2026c64c), \u2b07 1.7kiB/s \u2b06 1.2kiB/s\n2023-08-11 11:22:10 [Parachain] \ud83d\udca4 Idle (0 peers), best: #0 (0x2717\u202655b5), finalized #0 (0x2717\u202655b5), \u2b07 0 \u2b06 0\n2023-08-11 11:22:12 [Relaychain] \u2728 Imported #239 (0x546a\u202653eb)\n2023-08-11 11:22:14 [Relaychain] \ud83d\udca4 Idle (2 peers), best: #239 (0x546a\u202653eb), finalized #236 (0x6b32\u20264ead), \u2b07 1.0kiB/s \u2b06 0.5kiB/s\n2023-08-11 11:22:15 [Parachain] \ud83d\udca4 Idle (0 peers), best: #0 (0x2717\u202655b5), finalized #0 (0x2717\u202655b5), \u2b07 0 \u2b06 0\n2023-08-11 11:22:04 [Relaychain] \ud83d\udca4 Idle (2 peers), best: #237 (0x3069\u2026400d), finalized #235 (0xa85b\u2026c64c), \u2b07 48.2kiB/s \u2b06 1.9kiB/s\n2023-08-11 11:22:05 [Parachain] \ud83d\udca4 Idle (0 peers), best: #0 (0x2717\u202655b5), finalized #0 (0x2717\u202655b5), \u2b07 0 \u2b06 0\n2023-08-11 11:22:06 [Relaychain] \u2728 Imported #238 (0x5a36\u2026447c)\n2023-08-11 11:22:09 [Relaychain] \ud83d\udca4 Idle (2 peers), best: #238 (0x5a36\u2026447c), finalized #235 (0xa85b\u2026c64c), \u2b07 1.7kiB/s \u2b06 1.2kiB/s\n2023-08-11 11:22:10 [Parachain] \ud83d\udca4 Idle (0 peers), best: #0 (0x2717\u202655b5), finalized #0 (0x2717\u202655b5), \u2b07 0 \u2b06 0\n2023-08-11 11:22:12 [Relaychain] \u2728 Imported #239 (0x546a\u202653eb)2023-08-11 11:22:18 [Relaychain] \ud83d\udc76 New epoch 24 launching at block 0xf339\u2026e676 (block slot 281961223 >= start slot 281961223).\n2023-08-11 11:22:18 [Relaychain] \ud83d\udc76 Next epoch starts at slot 281961233\n2023-08-11 11:22:18 [Relaychain] \u2728 Imported #240 (0xf339\u2026e676)\n2023-08-11 11:22:19 [Relaychain] \ud83d\udca4 Idle (2 peers), best: #240 (0xf339\u2026e676), finalized #237 (0x3069\u2026400d), \u2b07 1.4kiB/s \u2b06 0.7kiB/s\n2023-08-11 11:22:20 [Parachain] \ud83d\udca4 Idle (0 peers), best: #0 (0x2717\u202655b5), finalized #0 (0x2717\u202655b5), \u2b07 0 \u2b06 0\n")),(0,i.kt)("p",null,"It's possible you may also need to specify a bootnode for the parachain as well, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"alice"),"."),(0,i.kt)("p",null,"Our parachain is not making any blocks; and that is normal, as we still need to register it onto the\nrelay chain."),(0,i.kt)("h2",{id:"observing-state--verifying-orchestration"},"Observing State & Verifying Orchestration"),(0,i.kt)("p",null,"The most user-friendly way to verify and validate the state of both the relay chain and parachain is\n",(0,i.kt)("strong",{parentName:"p"},"Polkadot.js"),", and by visiting the relay chain and parachain respectively. The relay chain should\nbe making blocks, whereas the parachain shouldn't be. This is a great way to ensure your\nconfiguration is working so far:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A9944#/explorer"},"Polkadot.js - Relay Chain")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://polkadot.js.org/apps/?rpc=ws%3A%2F%2F127.0.0.1%3A8844#/explorer"},"Polkadot.js - Parachain"))))}d.isMDXComponent=!0}}]);