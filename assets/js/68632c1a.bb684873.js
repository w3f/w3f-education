"use strict";(self.webpackChunkw3f_education=self.webpackChunkw3f_education||[]).push([[1908],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=l(n),v=i,y=u["".concat(c,".").concat(v)]||u[v]||d[v]||o;return n?r.createElement(y,s(s({ref:t},p),{},{components:n})):r.createElement(y,s({ref:t},p))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=v;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:i,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},54765:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=n(87462),i=(n(67294),n(3905));const o={id:"casting-handling",title:"Casting & Type Conversion in Rust",sidebar_label:"Casting & Type Conversion in Rust",description:"A comprehensive overview on how to cast and and handle type conversion in Rust"},s=void 0,a={unversionedId:"Rust/section2/casting-handling",id:"Rust/section2/casting-handling",title:"Casting & Type Conversion in Rust",description:"A comprehensive overview on how to cast and and handle type conversion in Rust",source:"@site/docs/Rust/section2/casting-handling.md",sourceDirName:"Rust/section2",slug:"/Rust/section2/casting-handling",permalink:"/docs/Rust/section2/casting-handling",draft:!1,editUrl:"https://github.com/w3f/w3f-education/edit/main/docs/Rust/section2/casting-handling.md",tags:[],version:"current",lastUpdatedBy:"Bader Youssef",lastUpdatedAt:1697124528,formattedLastUpdatedAt:"Oct 12, 2023",frontMatter:{id:"casting-handling",title:"Casting & Type Conversion in Rust",sidebar_label:"Casting & Type Conversion in Rust",description:"A comprehensive overview on how to cast and and handle type conversion in Rust"},sidebar:"rust",previous:{title:"Useful Traits - Common Substrate Traits",permalink:"/docs/Rust/section2/common-traits"},next:{title:"Using Substrate Arithmetic for Safe Math",permalink:"/docs/Rust/section2/safe-math"}},c={},l=[{value:"Lossy vs. Lossless Conversions",id:"lossy-vs-lossless-conversions",level:2},{value:"Safely converting between primitive types",id:"safely-converting-between-primitive-types",level:2},{value:"Safely converting between custom types",id:"safely-converting-between-custom-types",level:2},{value:"Inferred &amp; Coercion Types",id:"inferred--coercion-types",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"This page is under construction",type:"warning"}),(0,i.kt)("h2",{id:"lossy-vs-lossless-conversions"},"Lossy vs. Lossless Conversions"),(0,i.kt)("h2",{id:"safely-converting-between-primitive-types"},"Safely converting between primitive types"),(0,i.kt)("h2",{id:"safely-converting-between-custom-types"},"Safely converting between custom types"),(0,i.kt)("h2",{id:"inferred--coercion-types"},"Inferred & Coercion Types"))}d.isMDXComponent=!0}}]);